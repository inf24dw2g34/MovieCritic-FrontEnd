paths:
  /movies:
    get:
      tags:
        - Movies
      summary: Get all movies
      description: Retrieve a list of all movies.
      security:
        - googleOAuth: ["email", "profile"]
      responses:
        200:
          description: A list of movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"
        401:
          description: Unauthorized
        500:
          description: Internal server error
    post:
      tags:
        - Movies
      summary: Create a new movie
      description: Create a new movie. Only admins can perform this action.
      security:
        - googleOAuth: ["email", "profile"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Inception
                description:
                  type: string
                  example: A mind-bending thriller about dreams within dreams.
                year:
                  type: integer
                  example: 2010
                duration:
                  type: integer
                  example: 148
                directorId:
                  type: integer
                  example: 1
      responses:
        201:
          description: Movie created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
        400:
          description: Bad request (e.g., missing required fields)
        401:
          description: Unauthorized
        403:
          description: Forbidden (Admins only)
        500:
          description: Internal server error

  /movies/{id}:
    get:
      tags:
        - Movies
      summary: Get a movie by ID
      description: Retrieve details of a specific movie by its ID.
      security:
        - googleOAuth: ["email", "profile"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the movie
      responses:
        200:
          description: Movie details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
        401:
          description: Unauthorized
        404:
          description: Movie not found
        500:
          description: Internal server error
    put:
      tags:
        - Movies
      summary: Update a movie
      description: Update the details of a movie. Only admins can perform this action.
      security:
        - googleOAuth: ["email", "profile"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the movie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Inception
                description:
                  type: string
                  example: A mind-bending thriller about dreams within dreams.
                year:
                  type: integer
                  example: 2010
                duration:
                  type: integer
                  example: 148
                directorId:
                  type: integer
                  example: 1
      responses:
        200:
          description: Movie updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
        400:
          description: Bad request (e.g., missing required fields)
        401:
          description: Unauthorized
        403:
          description: Forbidden (Admins only)
        404:
          description: Movie not found
        500:
          description: Internal server error
    delete:
      tags:
        - Movies
      summary: Delete a movie
      description: Delete a movie by its ID. Only admins can perform this action.
      security:
        - googleOAuth: ["email", "profile"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the movie
      responses:
        200:
          description: Movie deleted successfully
        401:
          description: Unauthorized
        403:
          description: Forbidden (Admins only)
        404:
          description: Movie not found
        500:
          description: Internal server error

  /movies/{id}/reviews:
    get:
      tags:
        - Movies
      summary: Get reviews for a movie
      description: Retrieve all reviews for a specific movie.
      security:
        - googleOAuth: ["email", "profile"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the movie
      responses:
        200:
          description: A list of reviews for the specified movie
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Review"
        401:
          description: Unauthorized
        404:
          description: Movie not found
        500:
          description: Internal server error

  /movies/{id}/likes:
    get:
      tags:
        - Movies
      summary: Get likes for a movie
      description: Retrieve all users who liked a specific movie.
      security:
        - googleOAuth: ["email", "profile"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the movie
      responses:
        200:
          description: A list of users who liked the specified movie
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        401:
          description: Unauthorized
        404:
          description: Movie not found
        500:
          description: Internal server error

    post:
      tags:
        - Movies
      summary: Add a like to a movie
      description: Allows an authenticated user to like a specific movie.
      security:
        - googleOAuth: ["email", "profile"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the movie to like
      responses:
        200:
          description: Movie liked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Movie liked successfully."
        401:
          description: Unauthorized
        404:
          description: Movie not found
        500:
          description: Internal server error

    delete:
      tags:
        - Movies
      summary: Remove a like from a movie
      description: Allows an authenticated user to unlike a specific movie.
      security:
        - googleOAuth: ["email", "profile"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the movie to unlike
      responses:
        200:
          description: Movie unliked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Movie unliked successfully."
        401:
          description: Unauthorized
        404:
          description: Movie not found
        500:
          description: Internal server error